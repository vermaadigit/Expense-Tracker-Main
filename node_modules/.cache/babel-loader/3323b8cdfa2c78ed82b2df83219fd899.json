{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PushToTalkButton = void 0;\nvar react_1 = __importStar(require(\"react\"));\nvar react_client_1 = require(\"@speechly/react-client\");\nvar pubsub_js_1 = __importDefault(require(\"pubsub-js\"));\nvar types_1 = require(\"../types\");\nvar HintCallout_1 = require(\"./HintCallout\");\nrequire(\"@speechly/browser-ui/holdable-button\");\nvar PushToTalkButton = function (_a) {\n  var captureKey = _a.captureKey,\n    _b = _a.size,\n    size = _b === void 0 ? '6.0rem' : _b,\n    _c = _a.gradientStops,\n    gradientStops = _c === void 0 ? ['#15e8b5', '#4fa1f9'] : _c;\n  var _d = react_client_1.useSpeechContext(),\n    speechState = _d.speechState,\n    toggleRecording = _d.toggleRecording,\n    initialise = _d.initialise;\n  var _e = react_1.useState(react_client_1.SpeechState.Idle),\n    icon = _e[0],\n    setIcon = _e[1];\n  var buttonRef = react_1.useRef();\n  var speechStateRef = react_1.useRef();\n  // make stateRef always have the current count\n  // your \"fixed\" callbacks can refer to this object whenever\n  // they need the current value.  Note: the callbacks will not\n  // be reactive - they will not re-run the instant state changes,\n  // but they *will* see the current value whenever they do run\n  speechStateRef.current = speechState;\n  react_1.useEffect(function () {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (buttonRef === null || buttonRef === void 0 ? void 0 : buttonRef.current) {\n      var button = buttonRef.current;\n      button.onholdstart = tangentPressAction;\n      button.onholdend = tangentReleaseAction;\n    }\n  });\n  // Change button face according to Speechly states\n  react_1.useEffect(function () {\n    setIcon(speechState);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [speechState]);\n  var tangentPressAction = function () {\n    pubsub_js_1.default.publish(types_1.SpeechlyUiEvents.TangentPress, {\n      state: speechStateRef.current\n    });\n    switch (speechStateRef.current) {\n      case react_client_1.SpeechState.Idle:\n      case react_client_1.SpeechState.Failed:\n        // Speechly & Mic initialise needs to be in a function triggered by event handler\n        // otherwise it won't work reliably on Safari iOS as of 11/2020\n        initialise().catch(function (err) {\n          return console.error('Error initiasing Speechly', err);\n        });\n        break;\n      case react_client_1.SpeechState.Ready:\n        toggleRecording().catch(function (err) {\n          return console.error('Error while starting to record', err);\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  var tangentReleaseAction = function (e) {\n    pubsub_js_1.default.publish(types_1.SpeechlyUiEvents.TangentRelease, {\n      state: speechStateRef.current,\n      timeMs: e.timeMs\n    });\n    switch (speechStateRef.current) {\n      case react_client_1.SpeechState.Recording:\n        toggleRecording().catch(function (err) {\n          return console.error('Error while stopping recording', err);\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  return react_1.default.createElement(\"div\", null, react_1.default.createElement(\"holdable-button\", {\n    ref: buttonRef,\n    capturekey: captureKey,\n    icon: icon,\n    size: size,\n    gradientstop1: gradientStops[0],\n    gradientstop2: gradientStops[1]\n  }), react_1.default.createElement(HintCallout_1.HintCallout, null));\n};\nexports.PushToTalkButton = PushToTalkButton;","map":{"version":3,"sources":["../../src/components/PushToTalkButton.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PushToTalkButton = void 0;\nvar react_1 = __importStar(require(\"react\"));\nvar react_client_1 = require(\"@speechly/react-client\");\nvar pubsub_js_1 = __importDefault(require(\"pubsub-js\"));\nvar types_1 = require(\"../types\");\nvar HintCallout_1 = require(\"./HintCallout\");\nrequire(\"@speechly/browser-ui/holdable-button\");\nvar PushToTalkButton = function (_a) {\n    var captureKey = _a.captureKey, _b = _a.size, size = _b === void 0 ? '6.0rem' : _b, _c = _a.gradientStops, gradientStops = _c === void 0 ? ['#15e8b5', '#4fa1f9'] : _c;\n    var _d = react_client_1.useSpeechContext(), speechState = _d.speechState, toggleRecording = _d.toggleRecording, initialise = _d.initialise;\n    var _e = react_1.useState(react_client_1.SpeechState.Idle), icon = _e[0], setIcon = _e[1];\n    var buttonRef = react_1.useRef();\n    var speechStateRef = react_1.useRef();\n    // make stateRef always have the current count\n    // your \"fixed\" callbacks can refer to this object whenever\n    // they need the current value.  Note: the callbacks will not\n    // be reactive - they will not re-run the instant state changes,\n    // but they *will* see the current value whenever they do run\n    speechStateRef.current = speechState;\n    react_1.useEffect(function () {\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (buttonRef === null || buttonRef === void 0 ? void 0 : buttonRef.current) {\n            var button = buttonRef.current;\n            button.onholdstart = tangentPressAction;\n            button.onholdend = tangentReleaseAction;\n        }\n    });\n    // Change button face according to Speechly states\n    react_1.useEffect(function () {\n        setIcon(speechState);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [speechState]);\n    var tangentPressAction = function () {\n        pubsub_js_1.default.publish(types_1.SpeechlyUiEvents.TangentPress, { state: speechStateRef.current });\n        switch (speechStateRef.current) {\n            case react_client_1.SpeechState.Idle:\n            case react_client_1.SpeechState.Failed:\n                // Speechly & Mic initialise needs to be in a function triggered by event handler\n                // otherwise it won't work reliably on Safari iOS as of 11/2020\n                initialise().catch(function (err) { return console.error('Error initiasing Speechly', err); });\n                break;\n            case react_client_1.SpeechState.Ready:\n                toggleRecording().catch(function (err) { return console.error('Error while starting to record', err); });\n                break;\n            default:\n                break;\n        }\n    };\n    var tangentReleaseAction = function (e) {\n        pubsub_js_1.default.publish(types_1.SpeechlyUiEvents.TangentRelease, { state: speechStateRef.current, timeMs: e.timeMs });\n        switch (speechStateRef.current) {\n            case react_client_1.SpeechState.Recording:\n                toggleRecording().catch(function (err) { return console.error('Error while stopping recording', err); });\n                break;\n            default:\n                break;\n        }\n    };\n    return (react_1.default.createElement(\"div\", null,\n        react_1.default.createElement(\"holdable-button\", { ref: buttonRef, capturekey: captureKey, icon: icon, size: size, gradientstop1: gradientStops[0], gradientstop2: gradientStops[1] }),\n        react_1.default.createElement(HintCallout_1.HintCallout, null)));\n};\nexports.PushToTalkButton = PushToTalkButton;\n//# sourceMappingURL=PushToTalkButton.js.map"]},"metadata":{},"sourceType":"script"}