{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapClientState = void 0;\nvar browser_client_1 = require(\"@speechly/browser-client\");\nvar types_1 = require(\"./types\");\nfunction mapClientState(s) {\n  switch (s) {\n    case browser_client_1.ClientState.Failed:\n      return types_1.SpeechState.Failed;\n    case browser_client_1.ClientState.NoBrowserSupport:\n      return types_1.SpeechState.NoBrowserSupport;\n    case browser_client_1.ClientState.NoAudioConsent:\n      return types_1.SpeechState.NoAudioConsent;\n    case browser_client_1.ClientState.Disconnecting:\n    case browser_client_1.ClientState.Disconnected:\n      return types_1.SpeechState.Idle;\n    case browser_client_1.ClientState.Connecting:\n      return types_1.SpeechState.Connecting;\n    case browser_client_1.ClientState.Connected:\n      return types_1.SpeechState.Ready;\n    case browser_client_1.ClientState.Starting:\n    case browser_client_1.ClientState.Recording:\n      return types_1.SpeechState.Recording;\n    case browser_client_1.ClientState.Stopping:\n      return types_1.SpeechState.Loading;\n    default:\n      return types_1.SpeechState.Failed;\n  }\n}\nexports.mapClientState = mapClientState;","map":{"version":3,"sources":["../src/state.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,gBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA,SAAgB,cAAc,CAAC,CAAc,EAAA;EAC3C,QAAQ,CAAC;IACP,KAAK,gBAAA,CAAA,WAAW,CAAC,MAAM;MACrB,OAAO,OAAA,CAAA,WAAW,CAAC,MAAM;IAC3B,KAAK,gBAAA,CAAA,WAAW,CAAC,gBAAgB;MAC/B,OAAO,OAAA,CAAA,WAAW,CAAC,gBAAgB;IACrC,KAAK,gBAAA,CAAA,WAAW,CAAC,cAAc;MAC7B,OAAO,OAAA,CAAA,WAAW,CAAC,cAAc;IACnC,KAAK,gBAAA,CAAA,WAAW,CAAC,aAAa;IAC9B,KAAK,gBAAA,CAAA,WAAW,CAAC,YAAY;MAC3B,OAAO,OAAA,CAAA,WAAW,CAAC,IAAI;IACzB,KAAK,gBAAA,CAAA,WAAW,CAAC,UAAU;MACzB,OAAO,OAAA,CAAA,WAAW,CAAC,UAAU;IAC/B,KAAK,gBAAA,CAAA,WAAW,CAAC,SAAS;MACxB,OAAO,OAAA,CAAA,WAAW,CAAC,KAAK;IAC1B,KAAK,gBAAA,CAAA,WAAW,CAAC,QAAQ;IACzB,KAAK,gBAAA,CAAA,WAAW,CAAC,SAAS;MACxB,OAAO,OAAA,CAAA,WAAW,CAAC,SAAS;IAC9B,KAAK,gBAAA,CAAA,WAAW,CAAC,QAAQ;MACvB,OAAO,OAAA,CAAA,WAAW,CAAC,OAAO;IAC5B;MACE,OAAO,OAAA,CAAA,WAAW,CAAC,MAAM;EAC5B;AACH;AAvBA,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapClientState = void 0;\nvar browser_client_1 = require(\"@speechly/browser-client\");\nvar types_1 = require(\"./types\");\nfunction mapClientState(s) {\n    switch (s) {\n        case browser_client_1.ClientState.Failed:\n            return types_1.SpeechState.Failed;\n        case browser_client_1.ClientState.NoBrowserSupport:\n            return types_1.SpeechState.NoBrowserSupport;\n        case browser_client_1.ClientState.NoAudioConsent:\n            return types_1.SpeechState.NoAudioConsent;\n        case browser_client_1.ClientState.Disconnecting:\n        case browser_client_1.ClientState.Disconnected:\n            return types_1.SpeechState.Idle;\n        case browser_client_1.ClientState.Connecting:\n            return types_1.SpeechState.Connecting;\n        case browser_client_1.ClientState.Connected:\n            return types_1.SpeechState.Ready;\n        case browser_client_1.ClientState.Starting:\n        case browser_client_1.ClientState.Recording:\n            return types_1.SpeechState.Recording;\n        case browser_client_1.ClientState.Stopping:\n            return types_1.SpeechState.Loading;\n        default:\n            return types_1.SpeechState.Failed;\n    }\n}\nexports.mapClientState = mapClientState;\n//# sourceMappingURL=state.js.map"]},"metadata":{},"sourceType":"script"}