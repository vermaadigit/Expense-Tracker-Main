{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { ExpenseTrackerContext } from './context/context';\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\nconst useTransactions = title => {\n  _s();\n  resetCategories();\n  const {\n    transactions\n  } = useContext(ExpenseTrackerContext);\n  const rightTransactions = transactions.filter(t => t.type === title);\n  const total = rightTransactions.reduce((acc, currVal) => acc += currVal.amount, 0);\n  const categories = title === 'Income' ? incomeCategories : expenseCategories;\n  rightTransactions.forEach(t => {\n    const category = categories.find(c => c.type === t.category);\n    if (category) category.amount += t.amount;\n  });\n  const filteredCategories = categories.filter(sc => sc.amount > 0);\n  const chartData = {\n    datasets: [{\n      data: filteredCategories.map(c => c.amount),\n      backgroundColor: filteredCategories.map(c => c.color)\n    }],\n    labels: filteredCategories.map(c => c.type)\n  };\n  return {\n    filteredCategories,\n    total,\n    chartData\n  };\n};\n_s(useTransactions, \"Ni2LnfH2vyq3Bhy/VEUHhQfs92s=\");\nexport default useTransactions;","map":{"version":3,"names":["useContext","ExpenseTrackerContext","incomeCategories","expenseCategories","resetCategories","useTransactions","title","_s","transactions","rightTransactions","filter","t","type","total","reduce","acc","currVal","amount","categories","forEach","category","find","c","filteredCategories","sc","chartData","datasets","data","map","backgroundColor","color","labels"],"sources":["C:/Users/adity/Desktop/speechly_expense_tracker_project/src/useTransactions.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport { ExpenseTrackerContext } from './context/context';\r\n\r\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\r\n\r\nconst useTransactions = (title) => {\r\n  resetCategories();\r\n  const { transactions } = useContext(ExpenseTrackerContext);\r\n  const rightTransactions = transactions.filter((t) => t.type === title);\r\n  const total = rightTransactions.reduce((acc, currVal) => acc += currVal.amount, 0);\r\n  const categories = title === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  rightTransactions.forEach((t) => {\r\n    const category = categories.find((c) => c.type === t.category);\r\n\r\n    if (category) category.amount += t.amount;\r\n  });\r\n\r\n  const filteredCategories = categories.filter((sc) => sc.amount > 0);\r\n\r\n  const chartData = {\r\n    datasets: [{\r\n      data: filteredCategories.map((c) => c.amount),\r\n      backgroundColor: filteredCategories.map((c) => c.color),\r\n    }],\r\n    labels: filteredCategories.map((c) => c.type),\r\n  };\r\n\r\n  return { filteredCategories, total, chartData };\r\n};\r\n\r\nexport default useTransactions;\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,qBAAqB,QAAQ,mBAAmB;AAEzD,SAASC,gBAAgB,EAAEC,iBAAiB,EAAEC,eAAe,QAAQ,wBAAwB;AAE7F,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACjCH,eAAe,CAAC,CAAC;EACjB,MAAM;IAAEI;EAAa,CAAC,GAAGR,UAAU,CAACC,qBAAqB,CAAC;EAC1D,MAAMQ,iBAAiB,GAAGD,YAAY,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKN,KAAK,CAAC;EACtE,MAAMO,KAAK,GAAGJ,iBAAiB,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,IAAIC,OAAO,CAACC,MAAM,EAAE,CAAC,CAAC;EAClF,MAAMC,UAAU,GAAGZ,KAAK,KAAK,QAAQ,GAAGJ,gBAAgB,GAAGC,iBAAiB;EAE5EM,iBAAiB,CAACU,OAAO,CAAER,CAAC,IAAK;IAC/B,MAAMS,QAAQ,GAAGF,UAAU,CAACG,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACV,IAAI,KAAKD,CAAC,CAACS,QAAQ,CAAC;IAE9D,IAAIA,QAAQ,EAAEA,QAAQ,CAACH,MAAM,IAAIN,CAAC,CAACM,MAAM;EAC3C,CAAC,CAAC;EAEF,MAAMM,kBAAkB,GAAGL,UAAU,CAACR,MAAM,CAAEc,EAAE,IAAKA,EAAE,CAACP,MAAM,GAAG,CAAC,CAAC;EAEnE,MAAMQ,SAAS,GAAG;IAChBC,QAAQ,EAAE,CAAC;MACTC,IAAI,EAAEJ,kBAAkB,CAACK,GAAG,CAAEN,CAAC,IAAKA,CAAC,CAACL,MAAM,CAAC;MAC7CY,eAAe,EAAEN,kBAAkB,CAACK,GAAG,CAAEN,CAAC,IAAKA,CAAC,CAACQ,KAAK;IACxD,CAAC,CAAC;IACFC,MAAM,EAAER,kBAAkB,CAACK,GAAG,CAAEN,CAAC,IAAKA,CAAC,CAACV,IAAI;EAC9C,CAAC;EAED,OAAO;IAAEW,kBAAkB;IAAEV,KAAK;IAAEY;EAAU,CAAC;AACjD,CAAC;AAAClB,EAAA,CAxBIF,eAAe;AA0BrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}