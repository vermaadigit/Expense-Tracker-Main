{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpeechProvider = exports.SpeechContext = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar browser_client_1 = require(\"@speechly/browser-client\");\nvar types_1 = require(\"./types\");\nvar state_1 = require(\"./state\");\n/**\n * A React context that holds the state of Speechly SLU API client.\n * @public\n */\nexports.SpeechContext = react_1.default.createContext({\n  initialise: function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, Promise.resolve()];\n      });\n    });\n  },\n  toggleRecording: function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, Promise.resolve()];\n      });\n    });\n  },\n  speechState: types_1.SpeechState.Idle\n});\n/**\n * The provider for SpeechContext.\n *\n * Make sure you have only one SpeechProvider in your application,\n * because otherwise the audio will be mixed up and unusable.\n *\n * It is possible to switch the props on the fly, which will make provider stop current client if it's running\n * and start a new one.\n * @public\n */\nvar SpeechProvider = /** @class */function (_super) {\n  __extends(SpeechProvider, _super);\n  function SpeechProvider(props) {\n    var _this = _super.call(this, props) || this;\n    _this.initialiseAudio = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, client, clientState;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _a = this.state, client = _a.client, clientState = _a.clientState;\n              if (!(clientState === browser_client_1.ClientState.Disconnected)) return [3 /*break*/, 2];\n              return [4 /*yield*/, client.initialize()];\n            case 1:\n              _b.sent();\n              _b.label = 2;\n            case 2:\n              return [2 /*return*/, Promise.resolve()];\n          }\n        });\n      });\n    };\n    _this.toggleRecording = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, client, clientState, _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = this.state, client = _a.client, clientState = _a.clientState;\n              _b = clientState;\n              switch (_b) {\n                case browser_client_1.ClientState.Disconnected:\n                  return [3 /*break*/, 1];\n                case browser_client_1.ClientState.Connected:\n                  return [3 /*break*/, 4];\n                case browser_client_1.ClientState.Recording:\n                  return [3 /*break*/, 6];\n              }\n              return [3 /*break*/, 8];\n            case 1:\n              return [4 /*yield*/, client.initialize()];\n            case 2:\n              _c.sent();\n              return [4 /*yield*/, client.startContext()];\n            case 3:\n              _c.sent();\n              return [2 /*return*/];\n            case 4:\n              return [4 /*yield*/, client.startContext()];\n            case 5:\n              _c.sent();\n              return [2 /*return*/];\n            case 6:\n              return [4 /*yield*/, client.stopContext()];\n            case 7:\n              _c.sent();\n              return [2 /*return*/];\n            case 8:\n              return [2 /*return*/, Promise.resolve()];\n          }\n        });\n      });\n    };\n    _this.initialiseClient = function (opts) {\n      var _a;\n      var client = new browser_client_1.Client(opts);\n      client.onStateChange(_this.onClientStateChange);\n      client.onSegmentChange(_this.onSegmentChange);\n      client.onTranscript(_this.onTranscript);\n      client.onEntity(_this.onEntity);\n      client.onIntent(_this.onIntent);\n      if (!((_a = opts.disableTenative) !== null && _a !== void 0 ? _a : false)) {\n        client.onTentativeIntent(_this.onTentativeIntent);\n        client.onTentativeTranscript(_this.onTentativeTranscript);\n        client.onTentativeEntities(_this.onTentativeEntities);\n      }\n      return client;\n    };\n    _this.onClientStateChange = function (clientState) {\n      _this.setState({\n        clientState: clientState,\n        recordingState: state_1.mapClientState(clientState)\n      });\n    };\n    _this.onSegmentChange = function (segment) {\n      if (!segment.isFinal) {\n        _this.setState({\n          segment: segment\n        });\n        return;\n      }\n      // Reset individual values when a segment is finalised.\n      _this.setState({\n        segment: segment,\n        tentativeTranscript: undefined,\n        transcript: undefined,\n        tentativeEntities: undefined,\n        entity: undefined,\n        tentativeIntent: undefined,\n        intent: undefined\n      });\n    };\n    _this.onTentativeTranscript = function (contextId, segmentId, words, text) {\n      _this.setState({\n        tentativeTranscript: {\n          contextId: contextId,\n          segmentId: segmentId,\n          text: text,\n          words: words\n        }\n      });\n    };\n    _this.onTranscript = function (contextId, segmentId, word) {\n      _this.setState({\n        transcript: {\n          contextId: contextId,\n          segmentId: segmentId,\n          word: word\n        }\n      });\n    };\n    _this.onTentativeEntities = function (contextId, segmentId, entities) {\n      _this.setState({\n        tentativeEntities: {\n          contextId: contextId,\n          segmentId: segmentId,\n          entities: entities\n        }\n      });\n    };\n    _this.onEntity = function (contextId, segmentId, entity) {\n      _this.setState({\n        entity: {\n          contextId: contextId,\n          segmentId: segmentId,\n          entity: entity\n        }\n      });\n    };\n    _this.onTentativeIntent = function (contextId, segmentId, intent) {\n      _this.setState({\n        tentativeIntent: {\n          contextId: contextId,\n          segmentId: segmentId,\n          intent: intent\n        }\n      });\n    };\n    _this.onIntent = function (contextId, segmentId, intent) {\n      _this.setState({\n        intent: {\n          contextId: contextId,\n          segmentId: segmentId,\n          intent: intent\n        }\n      });\n    };\n    _this.state = {\n      client: _this.initialiseClient(props),\n      recordingState: types_1.SpeechState.Idle,\n      clientState: browser_client_1.ClientState.Disconnected\n    };\n    return _this;\n  }\n  SpeechProvider.prototype.render = function () {\n    var _a = this.state,\n      recordingState = _a.recordingState,\n      segment = _a.segment,\n      tentativeTranscript = _a.tentativeTranscript,\n      transcript = _a.transcript,\n      tentativeEntities = _a.tentativeEntities,\n      entity = _a.entity,\n      tentativeIntent = _a.tentativeIntent,\n      intent = _a.intent;\n    return react_1.default.createElement(exports.SpeechContext.Provider, {\n      value: {\n        initialise: this.initialiseAudio,\n        toggleRecording: this.toggleRecording,\n        speechState: recordingState,\n        segment: segment,\n        tentativeTranscript: tentativeTranscript,\n        transcript: transcript,\n        tentativeEntities: tentativeEntities,\n        entity: entity,\n        tentativeIntent: tentativeIntent,\n        intent: intent\n      }\n    }, this.props.children);\n  };\n  SpeechProvider.prototype.componentDidUpdate = function (prevProps) {\n    return __awaiter(this, void 0, void 0, function () {\n      var props, client, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            props = this.props;\n            // We cannot compare microphone / api client / storage implementations,\n            // so changes in those will be ignored.\n            // A better approach for those would be to use separate contexts.\n            if (props.appId === prevProps.appId && props.language === prevProps.language && props.sampleRate === prevProps.sampleRate && props.debug === prevProps.debug && props.loginUrl === prevProps.loginUrl && props.apiUrl === prevProps.apiUrl) {\n              return [2 /*return*/];\n            }\n            client = this.state.client;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, client.close()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            e_1 = _a.sent();\n            console.error('Error closing Speechly client:', e_1);\n            return [3 /*break*/, 4];\n          case 4:\n            this.setState({\n              client: this.initialiseClient(props)\n            });\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  SpeechProvider.prototype.componentWillUnmount = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, this.state.client.close()];\n          case 1:\n            _b.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            _a = _b.sent();\n            return [3 /*break*/, 3];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  return SpeechProvider;\n}(react_1.default.Component);\nexports.SpeechProvider = SpeechProvider;","map":{"version":3,"sources":["../src/context.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAaA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AA6EA;;;AAGG;AACU,OAAA,CAAA,aAAa,GAAG,OAAA,CAAA,OAAK,CAAC,aAAa,CAAqB;EACnE,UAAU,EAAE,SAAA,CAAA,EAAA;IAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;MAAA,OAAA,WAAA,CAAA,IAAA,EAAA,UAAA,EAAA,EAAA;QAA2B,OAAA,CAAA,CAAA,CAAA,YAAA,OAAO,CAAC,OAAO,CAAA,CAAE,CAAA;;;GAAA;EACxD,eAAe,EAAE,SAAA,CAAA,EAAA;IAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;MAAA,OAAA,WAAA,CAAA,IAAA,EAAA,UAAA,EAAA,EAAA;QAA2B,OAAA,CAAA,CAAA,CAAA,YAAA,OAAO,CAAC,OAAO,CAAA,CAAE,CAAA;;;GAAA;EAC7D,WAAW,EAAE,OAAA,CAAA,WAAW,CAAC;CAC1B,CAAC;AA0BF;;;;;;;;;AASG;AACH,IAAA,cAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAoC,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;EAClC,SAAA,cAAA,CAAY,KAA0B,EAAA;IAAtC,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAK,CAAC,IAAA,IAAA;IASL,KAAA,CAAA,eAAe,GAAG,YAAA;MAAA,OAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;cACnB,EAAA,GAA0B,IAAI,CAAC,KAAK,EAAlC,MAAM,GAAA,EAAA,CAAA,MAAA,EAAE,WAAW,GAAA,EAAA,CAAA,WAAA;kBAEvB,EAAA,WAAW,KAAK,gBAAA,CAAA,WAAW,CAAC,YAAY,CAAA,EAAxC,OAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA;cACF,OAAA,CAAA,CAAA,CAAA,WAAM,MAAM,CAAC,UAAU,CAAA,CAAE,CAAA;;cAAzB,EAAA,CAAA,IAAA,CAAA,CAAyB;;;cAG3B,OAAA,CAAA,CAAA,CAAA,YAAO,OAAO,CAAC,OAAO,CAAA,CAAE,CAAA;;;;KACzB;IAEQ,KAAA,CAAA,eAAe,GAAG,YAAA;MAAA,OAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;cACnB,EAAA,GAA0B,IAAI,CAAC,KAAK,EAAlC,MAAM,GAAA,EAAA,CAAA,MAAA,EAAE,WAAW,GAAA,EAAA,CAAA,WAAA;cAEnB,EAAA,GAAA,WAAW;;qBACZ,gBAAA,CAAA,WAAW,CAAC,YAAY;kBAAxB,OAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA;qBAIA,gBAAA,CAAA,WAAW,CAAC,SAAS;kBAArB,OAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA;qBAGA,gBAAA,CAAA,WAAW,CAAC,SAAS;kBAArB,OAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA;;;;cANH,OAAA,CAAA,CAAA,CAAA,WAAM,MAAM,CAAC,UAAU,CAAA,CAAE,CAAA;;cAAzB,EAAA,CAAA,IAAA,CAAA,CAAyB;cACzB,OAAA,CAAA,CAAA,CAAA,WAAM,MAAM,CAAC,YAAY,CAAA,CAAE,CAAA;;cAA3B,EAAA,CAAA,IAAA,CAAA,CAA2B;cAC3B,OAAA,CAAA,CAAA,CAAA,WAAA;;cAEA,OAAA,CAAA,CAAA,CAAA,WAAM,MAAM,CAAC,YAAY,CAAA,CAAE,CAAA;;cAA3B,EAAA,CAAA,IAAA,CAAA,CAA2B;cAC3B,OAAA,CAAA,CAAA,CAAA,WAAA;;cAEA,OAAA,CAAA,CAAA,CAAA,WAAM,MAAM,CAAC,WAAW,CAAA,CAAE,CAAA;;cAA1B,EAAA,CAAA,IAAA,CAAA,CAA0B;cAC1B,OAAA,CAAA,CAAA,CAAA,WAAA;;cAEA,OAAA,CAAA,CAAA,CAAA,YAAO,OAAO,CAAC,OAAO,CAAA,CAAE,CAAA;;;;KAE7B;IAsEgB,KAAA,CAAA,gBAAgB,GAAG,UAAC,IAAyB,EAAA;;MAC5D,IAAM,MAAM,GAAG,IAAI,gBAAA,CAAA,MAAM,CAAC,IAAI,CAAC;MAE/B,MAAM,CAAC,aAAa,CAAC,KAAI,CAAC,mBAAmB,CAAC;MAC9C,MAAM,CAAC,eAAe,CAAC,KAAI,CAAC,eAAe,CAAC;MAE5C,MAAM,CAAC,YAAY,CAAC,KAAI,CAAC,YAAY,CAAC;MACtC,MAAM,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC;MAC9B,MAAM,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC;MAE9B,IAAI,EAAC,CAAA,EAAA,GAAC,IAAI,CAAC,eAAe,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,KAAK,CAAC,EAAE;QACpC,MAAM,CAAC,iBAAiB,CAAC,KAAI,CAAC,iBAAiB,CAAC;QAChD,MAAM,CAAC,qBAAqB,CAAC,KAAI,CAAC,qBAAqB,CAAC;QACxD,MAAM,CAAC,mBAAmB,CAAC,KAAI,CAAC,mBAAmB,CAAC;MACrD;MAED,OAAO,MAAM;IACf,CAAC;IAEgB,KAAA,CAAA,mBAAmB,GAAG,UAAC,WAAwB,EAAA;MAC9D,KAAI,CAAC,QAAQ,CAAC;QAAE,WAAW,EAAA,WAAA;QAAE,cAAc,EAAE,OAAA,CAAA,cAAc,CAAC,WAAW;MAAC,CAAE,CAAC;IAC7E,CAAC;IAEgB,KAAA,CAAA,eAAe,GAAG,UAAC,OAAsB,EAAA;MACxD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;QACpB,KAAI,CAAC,QAAQ,CAAC;UAAE,OAAO,EAAE;QAAO,CAAE,CAAC;QACnC;MACD;MAED;MACA,KAAI,CAAC,QAAQ,CAAC;QACZ,OAAO,EAAE,OAAO;QAChB,mBAAmB,EAAE,SAAS;QAC9B,UAAU,EAAE,SAAS;QACrB,iBAAiB,EAAE,SAAS;QAC5B,MAAM,EAAE,SAAS;QACjB,eAAe,EAAE,SAAS;QAC1B,MAAM,EAAE;OACT,CAAC;IACJ,CAAC;IAEgB,KAAA,CAAA,qBAAqB,GAAG,UACvC,SAAiB,EACjB,SAAiB,EACjB,KAAa,EACb,IAAY,EAAA;MAEZ,KAAI,CAAC,QAAQ,CAAC;QACZ,mBAAmB,EAAE;UACnB,SAAS,EAAA,SAAA;UACT,SAAS,EAAA,SAAA;UACT,IAAI,EAAA,IAAA;UACJ,KAAK,EAAA;QACN;OACF,CAAC;IACJ,CAAC;IAEgB,KAAA,CAAA,YAAY,GAAG,UAAC,SAAiB,EAAE,SAAiB,EAAE,IAAU,EAAA;MAC/E,KAAI,CAAC,QAAQ,CAAC;QACZ,UAAU,EAAE;UACV,SAAS,EAAA,SAAA;UACT,SAAS,EAAA,SAAA;UACT,IAAI,EAAA;QACL;OACF,CAAC;IACJ,CAAC;IAEgB,KAAA,CAAA,mBAAmB,GAAG,UAAC,SAAiB,EAAE,SAAiB,EAAE,QAAkB,EAAA;MAC9F,KAAI,CAAC,QAAQ,CAAC;QACZ,iBAAiB,EAAE;UACjB,SAAS,EAAA,SAAA;UACT,SAAS,EAAA,SAAA;UACT,QAAQ,EAAA;QACT;OACF,CAAC;IACJ,CAAC;IAEgB,KAAA,CAAA,QAAQ,GAAG,UAAC,SAAiB,EAAE,SAAiB,EAAE,MAAc,EAAA;MAC/E,KAAI,CAAC,QAAQ,CAAC;QACZ,MAAM,EAAE;UACN,SAAS,EAAA,SAAA;UACT,SAAS,EAAA,SAAA;UACT,MAAM,EAAA;QACP;OACF,CAAC;IACJ,CAAC;IAEgB,KAAA,CAAA,iBAAiB,GAAG,UAAC,SAAiB,EAAE,SAAiB,EAAE,MAAc,EAAA;MACxF,KAAI,CAAC,QAAQ,CAAC;QACZ,eAAe,EAAE;UACf,SAAS,EAAA,SAAA;UACT,SAAS,EAAA,SAAA;UACT,MAAM,EAAA;QACP;OACF,CAAC;IACJ,CAAC;IAEgB,KAAA,CAAA,QAAQ,GAAG,UAAC,SAAiB,EAAE,SAAiB,EAAE,MAAc,EAAA;MAC/E,KAAI,CAAC,QAAQ,CAAC;QACZ,MAAM,EAAE;UACN,SAAS,EAAA,SAAA;UACT,SAAS,EAAA,SAAA;UACT,MAAM,EAAA;QACP;OACF,CAAC;IACJ,CAAC;IAjNC,KAAI,CAAC,KAAK,GAAG;MACX,MAAM,EAAE,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;MACpC,cAAc,EAAE,OAAA,CAAA,WAAW,CAAC,IAAI;MAChC,WAAW,EAAE,gBAAA,CAAA,WAAW,CAAC;KAC1B;;EACH;EA+BA,cAAA,CAAA,SAAA,CAAA,MAAM,GAAN,YAAA;IACQ,IAAA,EAAA,GASF,IAAI,CAAC,KAAK;MARZ,cAAc,GAAA,EAAA,CAAA,cAAA;MACd,OAAO,GAAA,EAAA,CAAA,OAAA;MACP,mBAAmB,GAAA,EAAA,CAAA,mBAAA;MACnB,UAAU,GAAA,EAAA,CAAA,UAAA;MACV,iBAAiB,GAAA,EAAA,CAAA,iBAAA;MACjB,MAAM,GAAA,EAAA,CAAA,MAAA;MACN,eAAe,GAAA,EAAA,CAAA,eAAA;MACf,MAAM,GAAA,EAAA,CAAA,MACM;IAEd,OACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAA,aAAa,CAAC,QAAQ,EAAA;MACrB,KAAK,EAAE;QACL,UAAU,EAAE,IAAI,CAAC,eAAe;QAChC,eAAe,EAAE,IAAI,CAAC,eAAe;QACrC,WAAW,EAAE,cAAc;QAC3B,OAAO,EAAA,OAAA;QACP,mBAAmB,EAAA,mBAAA;QACnB,UAAU,EAAA,UAAA;QACV,iBAAiB,EAAA,iBAAA;QACjB,MAAM,EAAA,MAAA;QACN,eAAe,EAAA,eAAA;QACf,MAAM,EAAA;MACP;IAAA,CAAA,EAEA,IAAI,CAAC,KAAK,CAAC,QAAQ,CACG;EAE7B,CAAC;EAEK,cAAA,CAAA,SAAA,CAAA,kBAAkB,GAAxB,UAAyB,SAA8B,EAAA;;;;;;YAC/C,KAAK,GAAG,IAAI,CAAC,KAAK;YAExB;YACA;YACA;YACA,IACE,KAAK,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK,IAC/B,KAAK,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ,IACrC,KAAK,CAAC,UAAU,KAAK,SAAS,CAAC,UAAU,IACzC,KAAK,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK,IAC/B,KAAK,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ,IACrC,KAAK,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM,EACjC;cACA,OAAA,CAAA,CAAA,CAAA,WAAA;YACD;YAEO,MAAM,GAAK,IAAI,CAAC,KAAK,CAAA,MAAf;;;;YAGZ,OAAA,CAAA,CAAA,CAAA,WAAM,MAAM,CAAC,KAAK,CAAA,CAAE,CAAA;;YAApB,EAAA,CAAA,IAAA,CAAA,CAAoB;;;;YAEpB,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,GAAC,CAAC;;;YAGpD,IAAI,CAAC,QAAQ,CAAC;cAAE,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK;YAAC,CAAE,CAAC;;;;;GACxD;EAEK,cAAA,CAAA,SAAA,CAAA,oBAAoB,GAA1B,YAAA;;;;;;;YAEI,OAAA,CAAA,CAAA,CAAA,WAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAA,CAAE,CAAA;;YAA/B,EAAA,CAAA,IAAA,CAAA,CAA+B;;;;;;;;;;GAIlC;EA4GH,OAAA,cAAC;AAAD,CAAC,CAtNmC,OAAA,CAAA,OAAK,CAAC,SAAS,CAAA;AAAtC,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechProvider = exports.SpeechContext = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar browser_client_1 = require(\"@speechly/browser-client\");\nvar types_1 = require(\"./types\");\nvar state_1 = require(\"./state\");\n/**\n * A React context that holds the state of Speechly SLU API client.\n * @public\n */\nexports.SpeechContext = react_1.default.createContext({\n    initialise: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        return [2 /*return*/, Promise.resolve()];\n    }); }); },\n    toggleRecording: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        return [2 /*return*/, Promise.resolve()];\n    }); }); },\n    speechState: types_1.SpeechState.Idle,\n});\n/**\n * The provider for SpeechContext.\n *\n * Make sure you have only one SpeechProvider in your application,\n * because otherwise the audio will be mixed up and unusable.\n *\n * It is possible to switch the props on the fly, which will make provider stop current client if it's running\n * and start a new one.\n * @public\n */\nvar SpeechProvider = /** @class */ (function (_super) {\n    __extends(SpeechProvider, _super);\n    function SpeechProvider(props) {\n        var _this = _super.call(this, props) || this;\n        _this.initialiseAudio = function () { return __awaiter(_this, void 0, void 0, function () {\n            var _a, client, clientState;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.state, client = _a.client, clientState = _a.clientState;\n                        if (!(clientState === browser_client_1.ClientState.Disconnected)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, client.initialize()];\n                    case 1:\n                        _b.sent();\n                        _b.label = 2;\n                    case 2: return [2 /*return*/, Promise.resolve()];\n                }\n            });\n        }); };\n        _this.toggleRecording = function () { return __awaiter(_this, void 0, void 0, function () {\n            var _a, client, clientState, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.state, client = _a.client, clientState = _a.clientState;\n                        _b = clientState;\n                        switch (_b) {\n                            case browser_client_1.ClientState.Disconnected: return [3 /*break*/, 1];\n                            case browser_client_1.ClientState.Connected: return [3 /*break*/, 4];\n                            case browser_client_1.ClientState.Recording: return [3 /*break*/, 6];\n                        }\n                        return [3 /*break*/, 8];\n                    case 1: return [4 /*yield*/, client.initialize()];\n                    case 2:\n                        _c.sent();\n                        return [4 /*yield*/, client.startContext()];\n                    case 3:\n                        _c.sent();\n                        return [2 /*return*/];\n                    case 4: return [4 /*yield*/, client.startContext()];\n                    case 5:\n                        _c.sent();\n                        return [2 /*return*/];\n                    case 6: return [4 /*yield*/, client.stopContext()];\n                    case 7:\n                        _c.sent();\n                        return [2 /*return*/];\n                    case 8: return [2 /*return*/, Promise.resolve()];\n                }\n            });\n        }); };\n        _this.initialiseClient = function (opts) {\n            var _a;\n            var client = new browser_client_1.Client(opts);\n            client.onStateChange(_this.onClientStateChange);\n            client.onSegmentChange(_this.onSegmentChange);\n            client.onTranscript(_this.onTranscript);\n            client.onEntity(_this.onEntity);\n            client.onIntent(_this.onIntent);\n            if (!((_a = opts.disableTenative) !== null && _a !== void 0 ? _a : false)) {\n                client.onTentativeIntent(_this.onTentativeIntent);\n                client.onTentativeTranscript(_this.onTentativeTranscript);\n                client.onTentativeEntities(_this.onTentativeEntities);\n            }\n            return client;\n        };\n        _this.onClientStateChange = function (clientState) {\n            _this.setState({ clientState: clientState, recordingState: state_1.mapClientState(clientState) });\n        };\n        _this.onSegmentChange = function (segment) {\n            if (!segment.isFinal) {\n                _this.setState({ segment: segment });\n                return;\n            }\n            // Reset individual values when a segment is finalised.\n            _this.setState({\n                segment: segment,\n                tentativeTranscript: undefined,\n                transcript: undefined,\n                tentativeEntities: undefined,\n                entity: undefined,\n                tentativeIntent: undefined,\n                intent: undefined,\n            });\n        };\n        _this.onTentativeTranscript = function (contextId, segmentId, words, text) {\n            _this.setState({\n                tentativeTranscript: {\n                    contextId: contextId,\n                    segmentId: segmentId,\n                    text: text,\n                    words: words,\n                },\n            });\n        };\n        _this.onTranscript = function (contextId, segmentId, word) {\n            _this.setState({\n                transcript: {\n                    contextId: contextId,\n                    segmentId: segmentId,\n                    word: word,\n                },\n            });\n        };\n        _this.onTentativeEntities = function (contextId, segmentId, entities) {\n            _this.setState({\n                tentativeEntities: {\n                    contextId: contextId,\n                    segmentId: segmentId,\n                    entities: entities,\n                },\n            });\n        };\n        _this.onEntity = function (contextId, segmentId, entity) {\n            _this.setState({\n                entity: {\n                    contextId: contextId,\n                    segmentId: segmentId,\n                    entity: entity,\n                },\n            });\n        };\n        _this.onTentativeIntent = function (contextId, segmentId, intent) {\n            _this.setState({\n                tentativeIntent: {\n                    contextId: contextId,\n                    segmentId: segmentId,\n                    intent: intent,\n                },\n            });\n        };\n        _this.onIntent = function (contextId, segmentId, intent) {\n            _this.setState({\n                intent: {\n                    contextId: contextId,\n                    segmentId: segmentId,\n                    intent: intent,\n                },\n            });\n        };\n        _this.state = {\n            client: _this.initialiseClient(props),\n            recordingState: types_1.SpeechState.Idle,\n            clientState: browser_client_1.ClientState.Disconnected,\n        };\n        return _this;\n    }\n    SpeechProvider.prototype.render = function () {\n        var _a = this.state, recordingState = _a.recordingState, segment = _a.segment, tentativeTranscript = _a.tentativeTranscript, transcript = _a.transcript, tentativeEntities = _a.tentativeEntities, entity = _a.entity, tentativeIntent = _a.tentativeIntent, intent = _a.intent;\n        return (react_1.default.createElement(exports.SpeechContext.Provider, { value: {\n                initialise: this.initialiseAudio,\n                toggleRecording: this.toggleRecording,\n                speechState: recordingState,\n                segment: segment,\n                tentativeTranscript: tentativeTranscript,\n                transcript: transcript,\n                tentativeEntities: tentativeEntities,\n                entity: entity,\n                tentativeIntent: tentativeIntent,\n                intent: intent,\n            } }, this.props.children));\n    };\n    SpeechProvider.prototype.componentDidUpdate = function (prevProps) {\n        return __awaiter(this, void 0, void 0, function () {\n            var props, client, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        props = this.props;\n                        // We cannot compare microphone / api client / storage implementations,\n                        // so changes in those will be ignored.\n                        // A better approach for those would be to use separate contexts.\n                        if (props.appId === prevProps.appId &&\n                            props.language === prevProps.language &&\n                            props.sampleRate === prevProps.sampleRate &&\n                            props.debug === prevProps.debug &&\n                            props.loginUrl === prevProps.loginUrl &&\n                            props.apiUrl === prevProps.apiUrl) {\n                            return [2 /*return*/];\n                        }\n                        client = this.state.client;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, client.close()];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        console.error('Error closing Speechly client:', e_1);\n                        return [3 /*break*/, 4];\n                    case 4:\n                        this.setState({ client: this.initialiseClient(props) });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SpeechProvider.prototype.componentWillUnmount = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.state.client.close()];\n                    case 1:\n                        _b.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        _a = _b.sent();\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return SpeechProvider;\n}(react_1.default.Component));\nexports.SpeechProvider = SpeechProvider;\n//# sourceMappingURL=context.js.map"]},"metadata":{},"sourceType":"script"}